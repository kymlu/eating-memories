---
import "../styles/global.css";
import RecipePreview from "../components/previews/RecipePreview.astro";
import BasePage from "../layouts/BasePage.astro";
import { titleSort } from "../utils.ts";
import ExpandableSection from "../layouts/ExpandableSection.astro";

const allRecipes = await Astro.glob("./posts/*.md");
const allTags = [...new Set(allRecipes.map((recipe) => recipe.frontmatter.course).sort())];
---

<BasePage title="Home" mainClasses="">
	<div>
		{
			allTags.map((tag) => 
				<div>
					<ExpandableSection title={tag} startOpen={allTags.indexOf(tag) == 0}>
						<div class="flex flex-col gap-2">
							{ allRecipes.filter((recipe) => recipe.frontmatter.course == tag).sort(titleSort).map((post) =>
								<RecipePreview id={post.frontmatter.id} name={post.frontmatter.title} description={post.frontmatter.description} link={post.url} dietary={post.frontmatter.dietary} course={post.frontmatter.course} cuisine={post.frontmatter.cuisine} iconName={post.frontmatter.iconName}/>)
							}
						</div>
					</ExpandableSection>
					<hr/>
				</div>
			)
		}
	</div>
</BasePage>

<script>
	document.querySelector("select")?.addEventListener("change", (e) => {
		const recipesToHide = document.getElementById("recipes")?.querySelector(".grid");
		if (recipesToHide) {
			recipesToHide?.classList.remove("grid");
			recipesToHide?.classList.add("hidden");
		}

		const recipesToShow = document.getElementById((e.target as HTMLSelectElement).value);
		if (recipesToShow){
			recipesToShow.classList.add("grid");
			recipesToShow.classList.remove("hidden");
		}
	})
</script>