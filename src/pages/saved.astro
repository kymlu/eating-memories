---
import "../styles/global.css";
import BasePage from "../layouts/BasePage.astro";
import RecipePreview from "../layouts/RecipePreview.astro";
import { titleSort } from "../utils.ts";
const allRecipes = await Astro.glob("./posts/*.md");
---
<BasePage title="Saved Recipes">
    <div class="flex flex-row justify-between mb-2 portrait:flex-col">
        <h1 class="">Saved Recipes</h1>
        <button id="clear-btn" class="hidden w-32 p-1 text-white portrait:self-end rounded-xl bg-main-500 hover:bg-main-400">Clear Saved</button>
    </div>
	<div id="recipe-list" class="grid gap-2 landscape:grid-cols-2">
        { allRecipes.sort(titleSort).map((post) =>
            <saved-wrapper class="hidden" data-id={post.frontmatter.id}>
                <RecipePreview id={post.frontmatter.id} name={post.frontmatter.title} description={post.frontmatter.description} link={post.url} dietary={post.frontmatter.dietary} course={post.frontmatter.course} cuisine={post.frontmatter.cuisine}></RecipePreview>
            </saved-wrapper>)
        }
    </div>
    <span id="no-saved" class="hidden">You have no saved recipes!</span>

    <div id="popup-container" class="absolute left-0 top-0 items-center justify-center w-svw h-svh hidden">
        <div id="popup-bg" class="popup-bg"></div>
        <div id="popup" class="z-10 w-auto max-w-[70%] portrait:max-w-[80%] h-auto bg-white border-main-600 border-2 border-solid rounded-xl p-5 flex flex-col gap-4">
            <h1>Are you sure you want to clear your saved recipes?</h1>
            <div class="flex justify-around w-full">
                <button id="no" class="hover-shadow option-button">No</button>
                <button id="yes" class="hover-shadow option-button">Yes</button>
            </div>
        </div>
    </div>
</BasePage>

<style>
    :global(.dark) #clear-btn {
        @apply bg-main-900 hover:bg-main-800;
    }
    :global(.dark) #popup {
        @apply bg-main-1000 border-main-900;
    }
    :global(.dark) #popup-bg {
        @apply bg-main-1000;
    }

    .option-button {
        @apply w-14 px-2 py-1 transition-all rounded-full border-white;
    }
</style>

<script>
    import {LOCAL_STORAGE_KEYS} from "../const.ts";
    const savedString = window.localStorage.getItem(LOCAL_STORAGE_KEYS.SAVED);
    let savedList: string[] = [];
    if(savedString){
        savedList = (JSON.parse(savedString) as string[]).filter(id => id != "");
    }
    let savedCount = document.querySelectorAll("saved-wrapper").length;
    
    document.getElementById("clear-btn")?.addEventListener("click", () => {
        document.getElementById("popup-container")?.classList.remove("hidden");
        document.getElementById("popup-container")?.classList.add("flex");
    });
    
    ["no", "popup-bg"].forEach((elementId: string) => {
        document.getElementById(elementId)?.addEventListener("click", () => {
            document.getElementById("popup-container")?.classList.add("hidden");
        });
    })

    document.getElementById("yes")?.addEventListener("click", () => {
        window.localStorage.removeItem(LOCAL_STORAGE_KEYS.SAVED);
        location.reload();
    });
    
    class SavedWrapper extends HTMLElement {
        connectedCallback(){
            if(this.dataset.id && savedList.includes(this.dataset.id)){
                this.classList.remove("hidden");
                document.getElementById("clear-btn")?.classList.remove("hidden");
            } else {
                savedCount--;
                if(savedCount == 0){
                    document.getElementById("no-saved")?.classList.remove("hidden");
                }
                // Note: there is this weird bug (at least in safari) where if you remove this element, unless the first recipe is in the saved list, all the bookmark icons on the page will not be visible.
                // Works regardless of what is first.
                // TODO: work on a solution where you aren't removing saved recipes but instead adding.
                // this.parentElement?.removeChild(this);
                // this.remove();
            }
        }
    }
    customElements.define("saved-wrapper", SavedWrapper);
</script>